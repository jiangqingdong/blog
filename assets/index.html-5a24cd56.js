import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as t,f as a,a as s,b as p}from"./app-21ce620e.js";const e={},r=a(`<p><strong>一:源代码</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>tuling<span class="token punctuation">.</span>smlz<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classbyatecode</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created by smlz on 2019/11/5.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TulingByteCode</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token class-name">String</span> userName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userName <span class="token operator">=</span> userName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>二:通过我们javap -verbose TulingByteCode.class反编译</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//表示我们通过反编译的来源是哪个字节码文件</span>
<span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">D</span><span class="token operator">:</span><span class="token operator">/</span>work_space<span class="token operator">/</span>idea_space<span class="token operator">/</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>source<span class="token operator">/</span>tuling<span class="token operator">-</span>jvm<span class="token operator">/</span>target<span class="token operator">/</span>classes<span class="token operator">/</span>com<span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span><span class="token punctuation">.</span><span class="token keyword">class</span>
  <span class="token comment">//最后修改日期；文件大小</span>
  <span class="token class-name">Last</span> modified <span class="token number">2019</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">;</span> size <span class="token number">629</span> bytes
  <span class="token comment">//文件的md5值</span>
  <span class="token constant">MD5</span> checksum a0a9c001787f00738627278b0946a388
  <span class="token comment">//.class文件是通过哪个源文件编译过来的</span>
  <span class="token class-name">Compiled</span> from <span class="token string">&quot;TulingByteCode.java&quot;</span>
  <span class="token comment">//字节码的详细信息</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>tuling<span class="token punctuation">.</span>smlz<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classbyatecode<span class="token punctuation">.</span></span>TulingByteCode</span>
  <span class="token comment">//jdk的次版本号</span>
  minor version<span class="token operator">:</span> <span class="token number">0</span>
  <span class="token comment">//jdk的主版本号</span>
  major version<span class="token operator">:</span> <span class="token number">52</span>
  <span class="token comment">//访问权限</span>
  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span>
  <span class="token comment">//常量池</span>
<span class="token class-name">Constant</span> pool<span class="token operator">:</span>
   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">4.</span>#<span class="token number">21</span>         <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Fieldref</span>           #<span class="token number">3.</span>#<span class="token number">22</span>         <span class="token comment">// com/tuling/smlz/jvm/classbyatecode/TulingByteCode.userName:Ljava/lang/String;</span>
   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">23</span>            <span class="token comment">// com/tuling/smlz/jvm/classbyatecode/TulingByteCode</span>
   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">24</span>            <span class="token comment">// java/lang/Object</span>
   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               userName
   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span>
   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span>
  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span>
  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LocalVariableTable</span>
  #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token keyword">this</span>
  #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Lcom</span><span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span><span class="token punctuation">;</span>
  #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               getUserName
  #<span class="token number">15</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
  #<span class="token number">16</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               setUserName
  #<span class="token number">17</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
  #<span class="token number">18</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">MethodParameters</span>
  #<span class="token number">19</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span>
  #<span class="token number">20</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">TulingByteCode</span><span class="token punctuation">.</span>java
  #<span class="token number">21</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">7</span><span class="token operator">:</span>#<span class="token number">8</span>          <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span>
  #<span class="token number">22</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">5</span><span class="token operator">:</span>#<span class="token number">6</span>          <span class="token comment">// userName:Ljava/lang/String;</span>
  #<span class="token number">23</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               com<span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span>
  #<span class="token number">24</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span>
<span class="token punctuation">{</span> 
  <span class="token comment">//构造方法</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>tuling<span class="token punctuation">.</span>smlz<span class="token punctuation">.</span>jvm<span class="token punctuation">.</span>classbyatecode<span class="token punctuation">.</span></span>TulingByteCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span>
         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">6</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>
        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>
            <span class="token number">0</span>       <span class="token number">5</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lcom</span><span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span><span class="token punctuation">;</span>
  <span class="token comment">//get方法</span>
  <span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> getfield      #<span class="token number">2</span>                  <span class="token comment">// Field userName:Ljava/lang/String;</span>
         <span class="token number">4</span><span class="token operator">:</span> areturn
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">11</span><span class="token operator">:</span> <span class="token number">0</span>
      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>
        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>
            <span class="token number">0</span>       <span class="token number">5</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lcom</span><span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span><span class="token punctuation">;</span>
  <span class="token comment">//set方法</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span>
    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span>
    <span class="token class-name">Code</span><span class="token operator">:</span>
      stack<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">2</span>
         <span class="token number">0</span><span class="token operator">:</span> aload_0
         <span class="token number">1</span><span class="token operator">:</span> aload_1
         <span class="token number">2</span><span class="token operator">:</span> putfield      #<span class="token number">2</span>                  <span class="token comment">// Field userName:Ljava/lang/String;</span>
         <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">return</span>
      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span>
        line <span class="token number">15</span><span class="token operator">:</span> <span class="token number">0</span>
        line <span class="token number">16</span><span class="token operator">:</span> <span class="token number">5</span>
      <span class="token class-name">LocalVariableTable</span><span class="token operator">:</span>
        <span class="token class-name">Start</span>  <span class="token class-name">Length</span>  <span class="token class-name">Slot</span>  <span class="token class-name">Name</span>   <span class="token class-name">Signature</span>
            <span class="token number">0</span>       <span class="token number">6</span>     <span class="token number">0</span>  <span class="token keyword">this</span>   <span class="token class-name">Lcom</span><span class="token operator">/</span>tuling<span class="token operator">/</span>smlz<span class="token operator">/</span>jvm<span class="token operator">/</span>classbyatecode<span class="token operator">/</span><span class="token class-name">TulingByteCode</span><span class="token punctuation">;</span>
            <span class="token number">0</span>       <span class="token number">6</span>     <span class="token number">1</span> userName   <span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span>
    <span class="token class-name">MethodParameters</span><span class="token operator">:</span>
      <span class="token class-name">Name</span>                           <span class="token class-name">Flags</span>
      userName
<span class="token punctuation">}</span>
<span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;TulingByteCode.java&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>三:class文件通过16进制查看器打开如下</strong></p><p><strong>通过16进制查看器打开的文件结构是一个当个字节来显示，因为一个16进制数可以通过4位来表示,一个字节8位可以表示二个16进制数</strong></p><figure><img src="https://img.jssjqd.cn/202303020028908.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>我们class文件结构图</strong></p><p>​ <img src="https://img.jssjqd.cn/202303020028690.png" alt="image-20230302002858449" loading="lazy"></p><p><strong>Class文件结构参照表:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D7B82ABC7C084E6B858A34133A15BB3C/10780" alt="0" loading="lazy"></p><p><strong>Class文件结构伪代码</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4CA873D40B914AC79D53808473BB8BD1/10878" alt="0" loading="lazy"></p><p><strong>3.1)我们通过javap -verbose来分析一个字节码的时候，将会分析字节码文件的魔数,主 次版本号,常量池，类信息，类的构造方法，类的中的方法信息，类变量与成员变量等信息.</strong></p><p><strong>魔数:</strong> <strong>文件的开头的 四个字节 是固定 值位</strong> <strong>0xCAFEBABE</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E4C152DD8038497380BDC82C2AB01315/10783" alt="0" loading="lazy"></p><p><strong>3.2)次版本号(<strong>minor version</strong>)****:二个字节00 00 表示jdk的次版本号</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/37D82FD1F15443BD8F757EE5FFBB8AF4/10782" alt="0" loading="lazy"></p><p><strong>3.3)主版本号(<strong><strong>major version</strong></strong>)****:二个字节 00 34 表示为jdk的主版本号，34对于10进制为52</strong></p><p><strong>那么52代表的是1.8，51代表的是1.7 等等一直类推下去</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4894C3393AB540D08C45411728A1568C/10787" alt="0" loading="lazy"></p><p><strong>所以通过主次版本号来确定我们jdk的版本是1.8.0</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/277B46A73CD3417EB68ABEED898FC83F/10906" alt="0" loading="lazy"></p><p><strong>3.4)常量池入口</strong>**，占用二个字节,表示常量池中的个数=00 19 (25)-1=<strong><strong>24</strong></strong>个, 为啥需要-1，因为常量池中的第0个位置被我们的jvm占用了表示为null 所以我们通过编译出来的常量池索引是从1开始的.**</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>                Constant pool:   #1 = Methodref          #4.#21         // java/lang/Object.&quot;&lt;init&gt;&quot;:()V   #2 = Fieldref           #3.#22         // com/tuling/smlz/jvm/classbyatecode/TulingByteCode.userName:Ljava/lang/String;   #3 = Class              #23            // com/tuling/smlz/jvm/classbyatecode/TulingByteCode   #4 = Class              #24            // java/lang/Object   #5 = Utf8               userName   #6 = Utf8               Ljava/lang/String;   #7 = Utf8               &lt;init&gt;   #8 = Utf8               ()V   #9 = Utf8               Code  #10 = Utf8               LineNumberTable  #11 = Utf8               LocalVariableTable  #12 = Utf8               this  #13 = Utf8               Lcom/tuling/smlz/jvm/classbyatecode/TulingByteCode;  #14 = Utf8               getUserName  #15 = Utf8               ()Ljava/lang/String;  #16 = Utf8               setUserName  #17 = Utf8               (Ljava/lang/String;)V  #18 = Utf8               MethodParameters  #19 = Utf8               SourceFile  #20 = Utf8               TulingByteCode.java  #21 = NameAndType        #7:#8          // &quot;&lt;init&gt;&quot;:()V  #22 = NameAndType        #5:#6          // userName:Ljava/lang/String;  #23 = Utf8               com/tuling/smlz/jvm/classbyatecode/TulingByteCode  #24 = Utf8               java/lang/Object   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​</p><p><strong>3.4.1）常量池结构表如图所示</strong></p><p><strong>u1,u2,u4,u8分别代表1个字节,2个字节,4个字节,8个字节的无符号数</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/826C6D28228C4B3BB953AB4231756231/10771" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4C5CE7810E8E4B55A07B81A732B24576/10772" alt="0" loading="lazy"></p><p><strong>图示:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AF15768F7CAF49ED9583D9B36BC28331/10934" alt="class常量池类型分类.pdf" loading="lazy"></p><p>**3.4.2)**<strong>我们的常量池可以看作我们的java class类的一个资源仓库(比如Java类定的方法和变量信息),我们后面的方法 类的信息的描述信息都是通过索引去常量池中获取。</strong></p><p><strong>1)常量池中主要存放二种常量,一种是字面量 一种是符号引用</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2A8A399CFA844EE5B66988CE260C2933/10896" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/BD70C86982AE4AAD92DA57F26B9F7EC9/10770" alt="0" loading="lazy"></p><p><strong>3.4.3)在JVM规范中，每个字段或者变量都有描述信息,描述信息的主要作用是 数据类型，方法参数列表,返回值类型等.</strong></p><p><strong>1)基本参数类型和void类型都是用一个大写的字符来表示，对象类型是通过一个大写L加全类名表示，这么做的好处就是在保证jvm能读懂class文件的情况下尽量的压缩class文件体积.</strong></p><p><strong>基本数据类型表示:</strong></p><p><strong>B----&gt;byte</strong></p><p><strong>C----&gt;char</strong></p><p><strong>D----&gt;double</strong></p><p><strong>F-----&gt;float</strong></p><p><strong>I------&gt;int</strong></p><p><strong>J------&gt;long</strong></p><p><strong>S------&gt;short</strong></p><p><strong>Z------&gt;boolean</strong></p><p><strong>V-------&gt;void</strong></p><p><strong>对象类型:</strong></p><p><strong>String------&gt;Ljava/lang/String;(后面有一个分号)</strong></p><p><strong>对于数组类型: 每一个唯独都是用一个前置 [ 来表示</strong></p><p><strong>比如:</strong> <strong>int[] ------&gt;[ I,</strong></p><p>​ <strong>String [][]------&gt;[[Ljava.lang.String;</strong></p><p><strong>2）用描述符来描述方法的,先参数列表，后返回值的格式，参数列表按照严格的顺序放在()中</strong></p><p><strong>比如源码 String getUserInfoByIdAndName(int id,String name) 的方法描述符号</strong></p><p><strong>（I,Ljava/lang/String;）Ljava/lang/String;</strong></p><p><strong>第1个常量池分析:</strong> <strong>0A 00 04 00 15</strong></p><p><strong>0A:表示是常量池中的常量类型为方法引用</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/63E24644AD574DFC8C0C7CBF3058B6BB/10815" alt="0" loading="lazy"></p><p><strong>00 04二个字节表示的是是方法所在类 指向常量池的索引位置为#4,然后我们发现</strong></p><p><strong>#4的常量类型是Class，也是符号引用类型，指向常量池#24的位置,而#24是的常量池类型是字面量值为:java/lang/Object</strong></p><p><strong>00 15二个字节表示是方法的描述符，指向常量池索引#21的位置,我们发现#21的常量类型是&quot;NameAndType类型&quot;属于引用类型，指向常量池的#7 #8位置</strong></p><p><strong>#7常量类型是UTF-8类型属于字面量值为: 为构造方法</strong></p><p><strong>#8常量也是UTF-8类型的字面量值为:()V</strong></p><p><strong>所以常量池中的第一个常量是：java/lang/Object.&quot;&quot;😦)V</strong></p><p><strong>画图分析:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E96DD99D005342EC97ED24CAE10DEAD1/10816" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/EF3AA7CF67344AAB89F4F5C498917FCC/10778" alt="0" loading="lazy"></p><p><strong>第二个常量分析：09 00 03 00 16</strong></p><p><strong>09表示的是我们的</strong> <strong>CONSTANT_Methodref_info 字段类型的常量</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/7F1A94DAD6FA4F34AF337773B2A2A191/10881" alt="0" loading="lazy"></p><p><strong>00 03表示的class_index 表示是常量池中第三个 为我们的class常量的索引位置</strong></p><p><strong>00 16:表示该字段的名称和类型 指向我们常量池中索引为22的位置</strong></p><p><strong>解释:03表示指向常量池第三个位置,我们发现第三个位子是Class类型的常量，03位置的常量池应用指向的是#23的位置，而我们的#23常量池类型是utf-8表示是字面量</strong></p><p><strong>值为:com/tuling/smlz/jvm/classbyatecode/TulingByteCode</strong></p><p><strong>#22为常量池类型的nameAndType类型，分别指向我们的常量池第#5(utf-8类型的常量)的位置表示我们的字段的名称userName，#6指向的是常量池第六个位置,类型是utf-8类型的值为:Ljava/lang/String;</strong></p><p><strong>第二个常量com/tuling/smlz/jvm/classbyatecode/TulingByteCode.userName:Ljava/lang/String;</strong></p><p><strong>画图分析:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/830489B7ECA74760B741EEEDE13B12DF/10781" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A94D8BB1F26B48F7856D4127899980B0/10775" alt="0" loading="lazy"></p><p><strong>第三个常量分析: 07 00 17</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/6E76F2D06D484208BFCBA2ED384206FB/10843" alt="0" loading="lazy"></p><p><strong>第一个字节:07表示的是 class_info符号引用类型的常量</strong></p><p><strong>第二三个字节: 00 17表示是指向常量池中索引为23的位置,#23的常量池类型是utf8字面量</strong></p><p><strong>那么<strong><strong>utf8_info</strong></strong>的结构如下:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1CCE80ADAC9A4DEFA243D0A1D44F0595/10837" alt="0" loading="lazy"></p><p>第#23的常量的结构是</p><p><strong>其中 01表示utf8_info的常量类型</strong></p><p><strong>00 31：表示后面跟着49个字节是字面量的值</strong></p><p>01 00 31 63 6F 6D 2F 74 75 6C 69 6E 67 2F 73 6D 6C</p><p>7A 2F 6A 76 6D 2F 63 6C 61 73 73 62 79 61 74 65</p><p>63 6F 64 65 2F 54 75 6C 69 6E 67 42 79 74 65 43</p><p>6F 64 65</p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A1016DB330B94164BAE5537BD1EEE671/10845" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5480FCFCBE254F6FA93337E4FBF70D52/10779" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B1ABBAC5939B479CB63054BFE499139A/10784" alt="0" loading="lazy"></p><p><strong>第四个常量分析: 07 00 18</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/CDE3F53D9CAE435DB3A5B20BE1A46D8D/10842" alt="0" loading="lazy"></p><p><strong>第一个字节:07表示的是 class_info符号引用类型的常量</strong></p><p><strong>第二三个字节: 00 18表示是指向常量池中索引为24的位置,#24的常量池类型是utf8字面量</strong></p><p><strong>那么<strong><strong>utf8_info</strong></strong>的结构如下:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/247ED40694E243CC9C1772C957AA31B1/10839" alt="0" loading="lazy"></p><p><strong>01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74</strong></p><p><strong>其中 01表示utf8_info的常量类型</strong></p><p><strong>00 10：表示后面跟着16个字节是字面量的值</strong></p><p>**6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 字面量的值为:**<strong>java/lang/Object</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5B271E2AA42547FDA29CCACE6977817F/10786" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1591F7AD437F4D39A1AE7BB3DB6EA6F4/10785" alt="0" loading="lazy"></p><p><strong>第五个常量: 01 00 08 75 73 65 72 4E 61 6D 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E45BA20ACEA84B77987A2DB097A8D02E/10821" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 08二个字节表示的是字面量常量的长度为8 、</strong></p><p><strong>75 73 65 72 4E 61 6D 65 转为字符串为userName</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E65F8074BF1A4A479491034D66E7AC63/10863" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A03DDD91C72E4A3BAA7802A918F35E28/10910" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/34A9BD9A2D6F4E07876AB50A69097F4E/10796" alt="0" loading="lazy"></p><p><strong>第六个常量分析:</strong></p><p><strong>01 00 12 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B827974A76114BCD91DBD15370424FD5/10826" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 12二个字节表示的是字面量常量的长度为18 、</strong></p><p><strong>4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 转为字符串为 Ljava/lang/String;</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/52DAD76027CA4DCDA294D816A40ECA30/10879" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2E204278F5BD4710AD0E05AFC16D59B7/10909" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/63E1E6FD81F84B8C966ABA148EA246C9/10797" alt="0" loading="lazy"></p><p><strong>第七个常量分析:01 00 06 3C 69 6E 69 74 3E</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B42B20C5B4F64982A62DFF186563370F/10829" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 06二个字节表示的是字面量常量的长度为6</strong></p><p><strong>3C 69 6E 69 74 3E</strong> <strong>转为字符串为</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DD1D9E23B1AB4CE79E5F1E45829223BF/10846" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/25E747944D0B45FC96F4B4EA0CFBEC24/10914" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/85C467329F554C12A44956945C29CD56/10793" alt="0" loading="lazy"></p><p><strong>第八个常量分析:01 00 03 28 29 56</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AFD2BBDD4A6A4531AC63C24BB3D254D9/10827" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 03二个字节表示的是字面量常量的长度为3</strong></p><p><strong>28 29 56</strong> <strong>转为字符串为 ()V</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/136AFB250F924A3999A639B5598250D1/10895" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3CB2D7191C04435C8BB7F5E8543CCB8B/10913" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D7412172717D4E708FD56B0386254819/10794" alt="0" loading="lazy"></p><p><strong>第九个常量分析:01 00 04 43 6F 64 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/412E3AA4B506421085531811BD3BF5FF/10831" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 04二个字节表示的是字面量常量的长度为4</strong></p><p><strong>43 6F 64 65</strong> <strong>转为字符串为 Code</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A0526BB72FC042898BEA81C7985BBFB1/10873" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/54EA52735DCE4C668076C30880C59706/10916" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/7A66FB0514C24D7FA313E357B9055211/10791" alt="0" loading="lazy"></p><p><strong>第十个常量分析:01 00 0F 4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/51EABB4A260A438C9AAC05B9C287AE21/10830" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 0F二个字节表示的是字面量常量的长度为15</strong></p><p><strong>4C 69 6E 65 4E 75 6D 62 65 72 54 61 62 6C 65 转为字符串为 LineNumberTable</strong></p><p><strong>表示这个是行号表</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/948D0476D7FC40A19AE77BA6739A3831/10903" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/9BA15E76F8A54FE797CB26205E2BA16F/10918" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5A8EC3A54369466E945FE48E679C885B/10790" alt="0" loading="lazy"></p><p><strong>第11个常量:01 00 12 4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2941271ED34A4678B4B0C0EA18BB5EEA/10835" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 12二个字节表示的是字面量常量的长度为18</strong></p><p><strong>4C 6F 63 61 6C 56 61 72 69 61 62 6C 65 54 61 62 6C 65</strong> <strong>转为字符串为LocalVariableTable</strong></p><p><strong>表示这个是本地变量表</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/20E3EFD4699E4C2FA42C6C46BC2E11A1/10911" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2AB20B45A44E4FE09B7302FBC5089D37/10933" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3E355CE69FC74198B5DAC4C2A4F73322/10802" alt="0" loading="lazy"></p><p><strong>第12个常量: 01 00 04 74 68 69 73</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2EC3AC2CDBA84829ABDFA8468E042E50/10836" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 14二个字节表示的是字面量常量的长度为4</strong></p><p><strong>74 68 69 73</strong> <strong>转为字符串为this</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A80F8D3316104FC9A64FA7A4E596E97C/10927" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/9CFE9831A10F4310BC890208336F25FB/10882" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2FB178B35A1B47F790335F7FFAC7807C/10804" alt="0" loading="lazy"></p><p><strong>第13个常量:</strong></p><p><strong>01 00 33 4C 63 6F 6D 2F 74 75 6C 69 6E 67 2F 73 6D 6C 7A 2F 6A 76 6D 2F 63 6C 61 73 73 62 79 61 74 65 63 6F 64 65 2F 54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65 3B</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2C881050405245DA983699AAD6C02BA0/10838" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 33二个字节表示的是字面量常量的长度为51</strong></p><p><strong>4C 63 6F 6D 2F 74 75 6C 69 6E 67 2F 73 6D 6C 7A 2F 6A 76 6D 2F 63 6C 61 73 73 62 79 61 74 65 63 6F 64 65 2F 54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65 3B</strong></p><p><strong>表示字符串: Lcom/tuling/smlz/jvm/classbyatecode/TulingByteCode;</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DE19ED072EB24B61B385BE5F703BED4C/10860" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AC2BC1F336084290BC5294D44AC3393B/10923" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5F3DAD36777846FDB6091EEAD044C5A4/10795" alt="0" loading="lazy"></p><p><strong>第14个常量:01 00 0B 67 65 74 55 73 65 72 4E 61 6D 65</strong></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 0B 二个字节表示的是字面量常量的长度为11</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DA5D04222E1446899C464EF4A92A414C/10823" alt="0" loading="lazy"></p><p><strong>67 65 74 55 73 65 72 4E 61 6D 65 表示的是字符串getUserName</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D0DCBE58FD3742EDBF2B4AEA81B9E937/10893" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/05A7F68D7A9E48688BE955218122C5AE/10931" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/CE95870257F1458B8BC978B4A7091003/10798" alt="0" loading="lazy"></p><p><strong>第15个常量分析:01 00 14 28 29 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/EABBA70FCA3D465EB8E3D72229B5E5BF/10820" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 14 二个字节表示的是字面量常量的长度为20</strong></p><p><strong>接下来20个字节:</strong> <strong>28 29 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 表示字符串</strong></p><p><strong>()Ljava/lang/String;</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3707980A3460426BA6A36936DD307A4B/10887" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/FA63C23F60054E95AFCE28976340FF25/10930" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/803BEEA3EC4D4AFDB6062259086B9725/10800" alt="0" loading="lazy"></p><p><strong>第16个常量池分析: 01 00 0B 73 65 74 55 73 65 72 4E 61 6D 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/35A0DC537F304C5393844B30256C44EF/10832" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 0B 二个字节表示的是字面量常量的长度为11</strong></p><p><strong>接下来11个字节:</strong> <strong>73 65 74 55 73 65 72 4E 61 6D 65 表示字符串 setUserName</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5E657F0DBCBE4042B687F9B12FB81C36/10897" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DCA250DCD24C407B8E9DA6391142DF5F/10929" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/8AC8C1C15C9647089B8A66DBF9796E3F/10807" alt="0" loading="lazy"></p><p><strong>第17个常量池:01 00 15 28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/542A634ECF154D4888D7A60B851073E5/10828" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 15 二个字节表示的是字面量常量的长度为21</strong></p><p><strong>接下来21个字节:</strong> <strong>28 4C 6A 61 76 61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B 29 56 表示字符串 (Ljava/lang/String;)V</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B7C55AF7959E40F3A30F31A056E24B40/10902" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/793298BBA8BE464EBB202D0C6AD67D7E/10926" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/9EF98BB6C91D4AA19CA31435E8779026/10801" alt="0" loading="lazy"></p><p><strong>第18个常量：01 00 10 4D 65 74 68 6F 64 50 61 72 61 6D 65 74 65 72 73</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/32A735EAA8E94490AB497EBDFE140EC2/10833" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 10 二个字节表示的是字面量常量的长度为16</strong></p><p><strong>接下来16个字节:</strong> <strong>4D 65 74 68 6F 64 50 61 72 61 6D 65 74 65 72 73</strong> <strong>表示字符串MethodParameters</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/F2AEBD95A47047158148103CEFE5F9DF/10919" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B60607E83A9E4F3B8AF5F653FA8EFED7/10924" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/8D570C64B9E24BAE92B90882E3A63DAB/10803" alt="0" loading="lazy"></p><p><strong>第19个常量: 01 00 0A 53 6F 75 72 63 65 46 69 6C 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/C506CC879534454A9AD4343A4F7D165B/10824" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 0A 二个字节表示的是字面量常量的长度为10</strong></p><p><strong>接下来10个字节:</strong> <strong>53 6F 75 72 63 65 46 69 6C 65</strong> <strong>表示字符串SourceFile</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/6B566F9A51FE4F2095EF3F52AFA4E6A2/10908" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/160302430270418DA3BB2864F1CDE00A/10928" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/04F8C0BF4BF64DF2AB955A681DC4D253/10809" alt="0" loading="lazy"></p><p><strong>第20个常量分析:01 00 13 54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65 2E 6A 61 76 61</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D400DD83314E4B949B6D8876CCED63EA/10825" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 13 二个字节表示的是字面量常量的长度为19</strong></p><p><strong>接下来19个字节:</strong> <strong>54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65 2E 6A 61 76 61</strong> <strong>表示字符串TulingByteCode.java</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/88F46884DD67489997C85D4473CA6AEC/10901" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/92D8F29DF18B46A5B16A54E1EBDE4402/10932" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/EAA766D55F1249DF9E812ED6FAA20E38/10810" alt="0" loading="lazy"></p><p><strong>21个常量池分析: 0C 00 07 00 08</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/BA9DAFDDD23F4F3AAB5EB477E050739C/10883" alt="0" loading="lazy"></p><p><strong>0C：tag位表示的是符号引用 nameAndType_info类型的</strong></p><p><strong>00 07 指向索引为7的常量池#7</strong></p><p><strong>00 08 指向常量池8的位置#8</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/135A99C92FCC4D48A1833A7F50D910FF/10814" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DA333CDE38694962BEAB717C29AB8420/10912" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0EC6DB67A72244F391017304AD730C4D/10799" alt="0" loading="lazy"></p><p><strong>第22个常量池:0C 00 05 00 06</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E4225C2DC4B44C06850ACFD30B79854C/10880" alt="0" loading="lazy"></p><p><strong>0C：tag位表示的是符号引用 nameAndType_info类型的</strong></p><p><strong>00 05 指向索引为7的常量池#5</strong></p><p><strong>00 06 指向常量池8的位置#6</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/77C00E8038DA4F389F2E86E67B8F290C/10788" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/8C048972CA4B451A8A3D6F2086720B2F/10905" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/ECD9DAB9D6164CBCABFACC54A0A66E30/10808" alt="0" loading="lazy"></p><p><strong>第23个常量池:</strong></p><p><strong>01 00 31 63 6F 6D 2F 74 75 6C 69 6E 67 2F 73 6D 6C 7A 2F 6A 76 6D 2F 63 6C 61 73 73 62 79 61 74 65 63 6F 64 65 2F 54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/43A426A98A3C4ACF97E7D6E7D5F01CC1/10834" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 31 二个字节表示的是字面量常量的长度为49</strong></p><p><strong>接下来49个字节:</strong> <strong>63 6F 6D 2F 74 75 6C 69 6E 67 2F 73 6D 6C 7A 2F 6A 76 6D 2F 63 6C 61 73 73 62 79 61 74 65 63 6F 64 65 2F 54 75 6C 69 6E 67 42 79 74 65 43 6F 64 65</strong> <strong>表示字符串com/tuling/smlz/jvm/classbyatecode/TulingByteCode</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E635ED3AF5FB42F8B71344F0761B8861/10884" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1C1B5A2554924EA4ADA6F4CDFCDE134D/10877" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/04E029A1A5FD4051B3A244066682A0FA/10806" alt="0" loading="lazy"></p><p><strong>第24个常量池:01 00 10 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/F93240DB39CC4357872DB1BDD31BAE9D/10822" alt="0" loading="lazy"></p><p><strong>01：tag位表示的是utf8类型的字面量常量</strong></p><p><strong>00 10 二个字节表示的是字面量常量的长度为16</strong></p><p><strong>接下来16个字节:</strong> <strong>6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74</strong> <strong>表示字符串java/lang/Object</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1EE95F37696442F49B35A61F3157072B/10888" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/CF62D18ECF4D4EBBB2FA84D7FA9D5854/10899" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/92A4789C2B964EF1B45DA14ED706F200/10805" alt="0" loading="lazy"></p><p><strong>四:Class文件结构访问标识符号解析 Access_flag</strong></p><p><strong>解析我们的class文件是类还是接口，是否定义为public的,是否是abstract,是否被final修饰。</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/217A0818685548F2B0FD70E07EA1E1AC/10818" alt="0" loading="lazy"></p><p><strong>访问标志符号占用二个字节: 00 21</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/C667ED36B9C948369712D7FEF78BE381/10892" alt="0" loading="lazy"></p><p><strong>我们发现这个class文件的访问标识字节是0x0021，我们去查询手册中查询没有这个对应的？</strong></p><p><strong>原因:jvm规范并没有穷举出所以的类型 而是通过位运算的出来的.</strong></p><p><strong>0x0021 =</strong> <strong>0x0020</strong> <strong>位运算</strong> <strong>0x0001</strong> <strong>那么我们可以得出这个class的访问权限是****ACC_PUBLIC</strong> <strong>和****ACC_SUPER</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1BF233C1259B4DAAA00B511F342F4245/10875" alt="0" loading="lazy"></p><p><strong>五: This class name的描述当前的所属类</strong></p><p><strong>this class name 占用二个字节:00 03 表示索引 指向的是常量池中的第三个常量</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3177336DB39D4FE781DC2950A19AC35A/10894" alt="0" loading="lazy"></p><p><strong>根据第三部分常量池分析得出第三个常量分析得出如下</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/CE107CE9BE3941779B9B30AE950294A7/10792" alt="0" loading="lazy"></p><p><strong>所以我们的this class name：表示当前类</strong> <strong>com/tuling/smlz/jvm/classbyatecode/TulingByteCode</strong></p><p><strong>第六部分: super class name （当前class的父类名字）</strong></p><p><strong>同样占用二个字节:00 04 也是表示索引值，指向常量池中第四个常量</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0A5363814EDC401EA54695C91DC45AE7/10907" alt="0" loading="lazy"></p><p><strong>根据第三部分常量池的分析第四个常量池得出.</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/715FEF1710A847E3B38D8756C6534648/10811" alt="0" loading="lazy"></p><p><strong>所以我们的super class name表示的意思是: java/lang/Object</strong></p><p>*<em>第七部分:接口信息（*<em>标注 我们的当前class没有实现接口为了演示效果我用的另外一个类演示） 这个类我们实现了二个接口 分别为ITulingIntf ITulingIntf</em></em></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DC25B993A37445C29822EA8ABB404962/10900" alt="0" loading="lazy"></p><p><strong>00 02 00 08 00 09</strong> <strong>这六个字节描述的信息是</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0B8014E44EEE4C5D98F691D4174B904D/10904" alt="0" loading="lazy"></p><p><strong>00 02****表示我们实现了几个接口 这里很明星我们是实现了二个接口</strong></p><p><strong>00 08(第一个接口)</strong> <strong>表示的是接口的位于常量池中的索引.#8</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3E7B7585D1354E7ABFB2EE897221562F/10817" alt="0" loading="lazy"></p><p><strong>所以00 08指向的接口是:com/tuling/smlz/jvm/classbyatecode/ITulingIntf</strong></p><p>**00 09（第二个接口）**<strong>表示的是接口的位于常量池中的索引#9</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5DA9E73F59BC4B92BA657A746F1E900D/10813" alt="0" loading="lazy"></p><p><strong>第八部分:字段表信息</strong></p><p><strong>作用:用于描述类和接口中声明的变量，包括类变量和实例变量</strong></p><p><strong>但是不包括方法的局部变量</strong></p><p><strong>仅仅的接着接口信息后面的是字段描述 00 01 00 02 00 05 00 06 00 00</strong></p><p><strong>00 01 二个字节表示的是field_info字段表的个数 这里很显然只有一个</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/BF900FB88CAF4477B21C3735F48D54CE/10844" alt="0" loading="lazy"></p><p><strong>字段结构体</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5CEB587882514DF88F05FA33C07A87FB/10851" alt="0" loading="lazy"></p><p><strong>00 02 00 05 00 06 00 00</strong></p><p><strong>所以****00 02</strong> <strong>表示访问修饰符号为ACC_PRIVATE</strong></p><p><strong>所以****00 05</strong> <strong>表示的是字段的名称 指向的是常量池中第五个常量</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/6D39FADC37AF40EBAF9465F03EEE5E14/10939" alt="0" loading="lazy"></p><p><strong>所以<strong><strong>00 06</strong></strong>是我们的字段的描述符: 指向的是常量池中第六个常量</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/83806062ACE1460C91AD2A2A50F57E60/10935" alt="0" loading="lazy"></p><p><strong>00 00</strong> <strong>表示是属性表的个数 这里为0表示后面是没有属性表集合</strong></p><p><strong>通过jclasslib分析和我们自己分析的出来的结论一致</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D7E5508CF886483D8FE1FAE868B1D74A/10789" alt="0" loading="lazy"></p><p><strong>第九部分:方法表信息分析</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AD35F22B0B7945D2B5ECF9941D652389/10917" alt="0" loading="lazy"></p><p><strong>00 03 表示我们的方法的个数为三个</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/1840956A17B341DB9F47B01B2C6146B5/10921" alt="0" loading="lazy"></p><p><strong>方法表结构:如下</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/EC0A3F6B9CE94CD88F806FB771FB3425/10855" alt="0" loading="lazy"></p><p><strong>第一个方法的前八个字节</strong> <strong>00 01 00 07 00 08 00 01</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DE17154E32384A27A55797C354072EC8/10922" alt="0" loading="lazy"></p><p>**00 01:**<strong>表示的是方法的修饰符 表示的是acc_public</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/F2DEF913B564428C9D46BB1E124E1F37/10936" alt="0" loading="lazy"></p><p><strong>00 07</strong>**：表示的是方法的名称 表示指向常量池中第7个常量,表示方法的名称**</p><p><strong>表示构造方法</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/24F6053485FE4F4680EB6F0DE7827EDA/10865" alt="0" loading="lazy"></p><p><strong>00 08</strong>**：方法的描述符号,表示指向常量池第八个常量 为()V 表示的是无参无返回值**</p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/42719DA9E0B5423DB451941625F6892B/10876" alt="0" loading="lazy"></p><p><strong>00 01****表示有一个方法属性的个数</strong></p><p><strong>9.1）方法表中的属性表attribute_info结构图</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/FD8CA968E5E2410DBFB08F76E8401FB7/10890" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E102F589329E484DBDB2B3640F9B7B5D/10915" alt="0" loading="lazy"></p><p><strong>00 09 00 00 00 2F</strong></p><p><strong>00 09</strong>**：表示的是方法属性名称的索引指向常量池#9 表示是Code属性**</p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/13976DE309684E079A92602D89E0701D/10850" alt="0" loading="lazy"></p><p><strong>00 00 00 2F</strong> <strong>标识的info的长度 长度值为47个字节 也就是说 会占据47个字节作为code的值</strong></p><p><strong>后续的47个字节是我们的Code属性的所占用的字节 (<strong><strong>特别特别需要注意这47个字节从Code属性表中第三个开始也就是max_stack开始</strong></strong>)</strong></p><p><strong>code_attribute属性表结构如下</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/01F77F5433FC4C048931091DE05869E0/10776" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/994F4AF54A744E72BE43AB2A06FAA2EA/10869" alt="0" loading="lazy"></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>00 01</strong> <strong>00 01 00 00 00 05 2A B7 00 01 B1 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>**(max_stack)**<strong>表示的是我们最大操作数栈的深度为1</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B6F1E214F956471BA6CBA4E65B838C2D/10870" alt="0" loading="lazy"></p><p><strong>00 01</strong> <strong>00 01</strong> <strong>00 00 00 05 2A B7 00 01 B1 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>(max_locals)标识的是局部变量表变量的个数</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/938BC208E390482888B53397C4C0B07D/10864" alt="0" loading="lazy"></p><p><strong>00 01 00 01 00 00 00 05</strong> <strong>2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>(Code_lenth)四个字节表示的是我们指令的长度为五</strong></p><p><strong>字节码指令助记符号 2A B7 00 01 B1</strong></p><p>**0x2A:**<strong>对应的字节码注记符是aload_0,作用就是把当前调用方法的栈帧中的局部变量表索引位置为0的局部变量推送到操作数栈的栈顶.</strong></p><p><strong>0xB7</strong>**:表示是 invokespecial 调用父类的方法 那么后面需要接入二个字节表示调用哪个方法 所以** <strong>00 01</strong> <strong>表示的是指向常量池中第一个位置为为如下结构</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/62F065A1A29E42588C8EB078DEC5C702/10898" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0BD2ABBE19F345B1902A98E5FB240C12/10885" alt="0" loading="lazy"></p><p><strong>0xB1</strong> <strong>对应的字节码指令值retrun 表示retrun void from method；</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E3175B1C673048778A196BEAFDDA504B/10886" alt="0" loading="lazy"></p><p><strong>异常信息表的个数为 00 00 表示方法没有抛出异常</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00</strong> <strong>00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B19A7FF4EE644A98AA563578EBC822B4/10866" alt="0" loading="lazy"></p><p><strong>表示Code_attribute结构中属性表的个数为00 02 表示为2个</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00</strong> <strong>00 02</strong> <strong>00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/04C9F48175A141DE8FDF28AD4D205191/10858" alt="0" loading="lazy"></p><p><strong>LineNumberTable结构体为下图</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5E5AA92605934FF3ADEAA0AE576CCD16/10852" alt="0" loading="lazy"></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02</strong> <strong>00 0A</strong> <strong>00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>这二个字节表示的是我们属性名称的索引<strong><strong>attribute_name_index</strong></strong>指向常量池中的00 0A #10个常量池</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/B91368439CBE404B94E5C97287D6679E/10848" alt="0" loading="lazy"></p><p><strong>attribute_length</strong>**:属性的长度占用四个字节: 表示后面****00 00 00 06** <strong>六个字节是我们属性的内容</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A</strong> <strong>00 00 00 06</strong> <strong>00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/115690E84E9F49F5BE1D0BD860662E0B/10840" alt="0" loading="lazy"></p><p><strong>这里的****00 01 表示的是有几对指令码和源码映射关系 这里明显只有一对</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06</strong> <strong>00 01</strong> <strong>00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D003F0187FCD4E059C6810CCA19A1F20/10872" alt="0" loading="lazy"></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01</strong> <strong>00 00 00 06</strong> <strong>00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>这里表示 第一个指令码映射的是第六行源码</strong></p><p><strong>LocalVariableTable 本地方法变量表结构分析</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4D4B4C93A2AB43D19ABA7943F54290AB/10841" alt="0" loading="lazy"></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06</strong> <strong>00 0B</strong> <strong>00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>本地变量表的名称的索引指向<strong><strong>attribute_name_index</strong></strong>的是常量池11的位置:</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/EBBCBF24DE39406EA2E4494869147AEC/10819" alt="0" loading="lazy"></p><p><strong>本地变量表中属性的长度attribute_length:12长度</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B</strong> <strong>00 00 00 0C</strong> <strong>00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>本地变量表local_variable_table_length的个数</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C</strong> <strong>00 01</strong> <strong>00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>local_vabiable_info的结构</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/64FB2C0D4ADC47E38F099D92A919032D/10847" alt="0" loading="lazy"></p><p><strong>start_pc</strong>**😗*<strong>这个局部变量的生命周期开始的字节码偏移量 占用二个字节</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01</strong> <strong>00 00</strong> <strong>00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/7EFF757B8E934135B906D67030014266/10856" alt="0" loading="lazy"></p><p><strong>length</strong>**😗*<strong>作用范围覆盖的长度 占用二个字节</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00</strong> <strong>00 05</strong> <strong>00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0D4AFDE9EAC746F0AF2705A7B25897AB/10857" alt="0" loading="lazy"></p><p><strong>name_index</strong>**:表示局部变量的名称 二个字节**</p><p><strong>00 0C****表示指向常量池12的位置</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05</strong> <strong>00 0C</strong> <strong>00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0FAF0D185F484DDB8A14920F924E82E4/10940" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/7872E910055C4566A43F522F412541C0/10861" alt="0" loading="lazy"></p><p><strong>desc_index</strong>**:表示局部变量描述符索引 二个字节**</p><p><strong>00 0D****表示指向常量池13的位置</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C</strong> <strong>00 0D</strong> <strong>00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/6C0DC7C10EB1432295B9F563C5FCDDBD/10920" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A653B3FEA2B44F24ADA9672961B3DC42/10859" alt="0" loading="lazy"></p><p><strong>index</strong>**😗*<strong>index是这个局部变量在栈帧局部变量表中Slot的位置。当这个变量数据类型是64位类型时（double和long），它占用的Slot为index和index+1两个</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D</strong> <strong>00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/C4FD45162B9F4F9B99A0681017EB244C/10853" alt="0" loading="lazy"></p><p><strong>第二个方法的字节码</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/D6D3236024674ACE96D18118902A245A/10871" alt="0" loading="lazy"></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>1)方法访问标记符号:</strong></p><p><strong>0x0001<strong><strong>我们根据访问权限修饰符号查询可得 访问权限是</strong></strong>ACC_PUBLIC</strong></p><p><strong>00 01</strong> <strong>00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>2）方法名称: 00 0E指向常量池中#14的位置</strong></p><p><strong>00 01</strong> <strong>00 0E</strong> <strong>00 0F 00 01 00 09 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/0C482EFEE684486BB77BE542941704E4/10938" alt="0" loading="lazy"></p><p><strong>3)方法描述符号:00 0F 指向我们的常量池#15的位置</strong></p><p><strong>00 01 00 0E</strong> <strong>00 0F</strong> <strong>00 01 00 09 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DDBE7BB43D8D4B21AB1E00476DE5EADA/10937" alt="0" loading="lazy"></p><p><strong>4)方法表属性个数 00 01 表示一个</strong></p><p><strong>00 01 00 0E 00 0F</strong> <strong>00 01</strong> <strong>00 09 00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>5)方法结构体中的attribute_info的结构体</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/A50C6C033B01464F83CE83C734391C46/10889" alt="0" loading="lazy"></p><p><strong>5.1)attribute_info.attribute_name_index 表示的数属性名称索引 00 09指向常量池的位置: Code</strong></p><p><strong>00 01 00 0E 00 0F 00 01</strong> <strong>00 09</strong> <strong>00 00 00 2F 00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5D4068FE566D470384090F9FAFEBE0D0/10942" alt="0" loading="lazy"></p><p><strong>5.2)attribute_info.attribute_length表示的是我们属性的长度 00 00 00 2F</strong></p><p><strong>表示后面47个字节都是我们的Code_info结构体</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09</strong> <strong>00 00 00 2F</strong> <strong>00 01 00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>5.3）Code_info结构体如图所示</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/21786F08B2634E4F89DE215BFB75DCBA/10773" alt="0" loading="lazy"></p><p><strong>5.3.1)Code_info.max_stack方法操作数栈的深度</strong></p><p><strong>00 01表示方法操作数栈的深度为1</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F</strong> <strong>00 01</strong> <strong>00 01 00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/54FAECF649E14F22940BCD0B28DD2F7D/10862" alt="0" loading="lazy"></p><p><strong>5.3.2)Code_info.max_locals方法局部变量表的个数</strong></p><p><strong>00 01方法局部变量表的个数 1</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01</strong> <strong>00 00 00 05 2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/F6491B3A5FD54109BCA329AA14FA58B8/10868" alt="0" loading="lazy"></p><p><strong>5.3.3)Code_info.code_length 指令码的长度</strong> <strong>00 00 00 05 后面紧接着5个字节就是我们的具体指令码</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01</strong> <strong>00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>5.3.4)Code_info.code[code_length] 表示后面五个字节就是我们的指令码</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>**①:****0x2A:**<strong>对应的字节码注记符是aload_0,作用就是把当前调用方法的栈帧中的局部变量表索引位置为0的局部变量推送到操作数栈的栈顶.</strong></p><p><strong>②:0xb4 getfield</strong> 获取指定类的实例域，并将其值压入栈顶 后面是操作的字段</p><p><strong>00 02</strong>表示常量池索引第二位置</p><p><strong>B4 00 02 表示的意思就是把userName类型实例变量的引用压入方法的操作数栈</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/11E4E602590A47A68707B402963D6E85/10891" alt="0" loading="lazy"></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/7DB38551AB3A4D448F627C088DE33622/10867" alt="0" loading="lazy"></p><p><strong>③:<strong><strong>0xB4</strong></strong>----&gt;表示为aretrun 返回</strong> <strong>从当前方法返回对象引用</strong></p><p><strong>5.3.5）Code_info.exception_table_length 异常表的个数: 00 00表示方法没有异常</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0</strong> <strong>00 00</strong> <strong>00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2E76C72FBB6C4E58BB9DB7C79CB4DEFF/10874" alt="0" loading="lazy"></p><p><strong>5.3.6)code_info.attribute_count 表示code_info属性attribute_info的个数 2个</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00</strong> <strong>00 02</strong> <strong>00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AB3C760E432749578074F2D4EABEA137/10925" alt="0" loading="lazy"></p><p><strong>5.3.7)code_info.attribute_info[1]</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/AD6CF69EAAC242C5A049D9C4439708A3/10849" alt="0" loading="lazy"></p><p><strong>①:00 0A表示为attribute_name_index指向常量池10的位置</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3E0EDF5C76404D58A0FE0883E384C331/10941" alt="0" loading="lazy"></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02</strong> <strong>00 0A</strong> <strong>00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>②: 00 00 00 06 表示的是attribute_length 表示长度,接着后面6个字节是我们的</strong></p><p><strong>line_number_info的结构体所再用的字节</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02 00 0A</strong> <strong>00 00 00 06</strong> <strong>00 01 00 00 00 0B 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/E7726205E31B41A7B746B38BD26A2485/10854" alt="0" loading="lazy"></p><p>**③:**<strong>line_number_info结构体</strong></p><p><strong>00 01：表示字节码和源码映射的对数 01表示一对</strong></p><p><strong>00 00: 方法中的字节码的行号</strong></p><p><strong>00 0B: 源码中的行号 11行</strong></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06</strong> <strong>00 01 00 00 00 0B</strong> <strong>00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>5.3.7)code_info.attribute_info[2]</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/9227FB26C5C644A08ED5283ADEAE8C28/10951" alt="0" loading="lazy"></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B</strong> <strong>00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>attribute_name_index 00 0B 表示的是指向我们的常量池中11的位置 为LocalVariableTable</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/3A9D4882B9044EBF885A5CEE021B03F3/10948" alt="0" loading="lazy"></p><p>**attribute_length:**<strong>00 00 00 0C 标识属性的长度为12，那么后面的12个字符就是我们的属性表的内容</strong></p><p><strong>local_varibale_info表的结构体</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/8EEB19B0BE994DFBBA314A59AD8D6D69/10962" alt="0" loading="lazy"></p><p><strong>00 01 00 0E 00 0F 00 01 00 09 00 00 00 2F 00 01</strong> <strong>00 01 00 00 00 05</strong> <strong>2A B4 00 02 B0 00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 0B 00 0B 00 00 00 0C</strong> <strong>00 01 00 00 00 05 00 0C 00 0D 00 00</strong></p><p><strong>start_pc</strong>**😗*<strong>这个局部变量的生命周期开始的字节码偏移量 占用二个字节</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01</strong> <strong>00 00</strong> <strong>00 05 00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4741ABFE68E04108B70F819FCC5970CB/10967" alt="0" loading="lazy"></p><p><strong>length</strong>**😗*<strong>作用范围覆盖的长度 占用二个字节</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00</strong> <strong>00 05</strong> <strong>00 0C 00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/336F877561364BC1911F690860AF58A3/10971" alt="0" loading="lazy"></p><p><strong>name_index</strong>**:表示局部变量的名称 二个字节**</p><p><strong>00 0C****表示指向常量池12的位置</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00</strong> <strong>00 05</strong> <strong>00 0C</strong> <strong>00 0D 00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2A1D93A69C1B4E7997EA0103342CAC9D/10976" alt="0" loading="lazy"></p><p><strong>desc_index</strong>**:表示局部变量描述符索引 二个字节**</p><p><strong>00 0D****表示指向常量池13的位置</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00</strong> <strong>00 05</strong> <strong>00 0C</strong> <strong>00 0D</strong> <strong>00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/873C5C72C309477BBEA979206D9EA705/10980" alt="0" loading="lazy"></p><p><strong>index</strong>**😗*<strong>index是这个局部变量在栈帧局部变量表中Slot的位置。当这个变量数据类型是64位类型时（double和long），它占用的Slot为index和index+1两个</strong></p><p><strong>00 01 00 01 00 00 00 05 2A B7 00 01 B1</strong> <strong>00 00 00 02 00 0A 00 00 00 06 00 01 00 00 00 06 00 0B 00 00 00 0C 00 01 00 00 00 05 00 0C 00 0D</strong> <strong>00 00</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/5996E1041F124F258A56CD574322FC6B/10983" alt="0" loading="lazy"></p><p><strong>第三个方法的字节码文件分析</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/C568DCCA333A4EC7BFA5D277B1197371/10989" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>1)访问权限修饰符(这个权限修饰符为0x0001)</strong></p><p><strong>那么权限符是acc_public</strong></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>2）方法名称索引指向常量池中的#16</strong></p><p><strong>#16 = Utf8 setUserName</strong></p><p><strong>00 01</strong> <strong>00 10</strong> <strong>00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>3)方法描述符号索引 指向常量池中#17的位置</strong></p><p><strong>#17 = Utf8 (Ljava/lang/String;)V</strong></p><p><strong>00 01</strong> <strong>00 10</strong> <strong>00 11</strong> <strong>00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>4)该方法属性表的个数 为2个</strong></p><p><strong>00 01</strong> <strong>00 10 00 11</strong> <strong>00 02</strong> <strong>00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>4.1)第一个属性表Code属性表结构</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/F8D4B1E2F68F44BDA65B042F832D04C4/11019" alt="0" loading="lazy"></p><p><strong>①: 属性名称索引 指向常量池第九个位置</strong></p><p><strong>#9 = Utf8 Code</strong></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02</strong> <strong>00 09</strong> <strong>00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>②：属性长度 占用四个字节，四个字节计算出来的字节数字就是我们的Code属性内容</strong></p><p><strong>00 00 00 3E 转换成62个字节，那么我们后面的62个字节是我们的属性内容</strong></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09</strong> <strong>00 00</strong></p><p><strong>00 3E</strong> <strong>00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>③：本方法最大操作数深度为2</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/FCFCD5CB8DFE419DA3F4C4452F4B733D/11045" alt="0" loading="lazy"></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09</strong> <strong>00 00</strong></p><p><strong>00 3E</strong> <strong>00 02</strong> <strong>00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>④:局部变量表的大小为2</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/028511440B2D4FE3AA998DE50DCA8E40/11052" alt="0" loading="lazy"></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09</strong> <strong>00 00</strong></p><p><strong>00 3E 00 02</strong> <strong>00 02</strong> <strong>00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>⑤：jvm指令码长度 ,占用四个字节</strong> <strong>00 00 00 06</strong></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09</strong> <strong>00 00</strong></p><p><strong>00 3E 00 02 00 02</strong> <strong>00 00 00 06</strong> <strong>2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>⑥：jvm 指令解析 6个字节的指令码2A 2B B5 00 02 B1</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/DEFE9F9AD91E4A178B54365FCA5EFB38/11127" alt="0" loading="lazy"></p><p><strong>00 01</strong> <strong>00 10 00 11 00 02 00 09</strong> <strong>00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06</strong> <strong>2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>a) 0x2A-&gt;aload_0：表示把引用类型的压到我们操作数栈栈顶</strong></p><p><strong>b) 0x2B-&gt;aload_1：把我们第二个引用类型压入到操作数栈顶</strong></p><p><strong>c)0xB5-&gt;putFiled 把我们的栈顶的值赋值给实例变量</strong></p><p><strong>d)00 02: 表示putFiled的字端，表示操作的对象 指向我们的常量池#2的位置</strong></p><p><strong>e)0xB1:-&gt;从当前方法返回void</strong></p><p><strong>⑦:exception_table_length 异常表长度 为0，那么异常表个数为0</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/2F14E5E1E1EC4CC78FD2F2B9EB3A5CAC/11131" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00</strong> <strong>00 02 00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>⑧:Code属性表的attribute_info_count Code属性表的attribute属性个数</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/959E831DF3B54E16B8B5FDB15AC1E717/11133" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00</strong> <strong>00 02</strong> <strong>00 0A 00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>A)Code_info的第一个属性表之lineNumberTable</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/FD3AA3C80D984A0DB1FC9F7D21FCA6A3/11099" alt="0" loading="lazy"></p><p><strong>attribute_name_index:0A 指向我们的常量池10的位置</strong></p><p><strong>#10 = Utf8 LineNumberTable</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00</strong> <strong>0A</strong> <strong>00 00 00 0A 00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>attribute_length:占用四个字节 00 00 00 0A(10字节)</strong></p><p><strong>表示后面字节是我们的具体的属性</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/83F0D7C85C354EE689097AC89EFE44DE/11136" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>line_number_table_length:占用二个字节 表示2对映射</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02</strong> <strong>00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>line_number_info存在二对映射</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/4DDF5510625B4711B12C202A013E9290/11139" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02</strong> <strong>00 00 00 15</strong></p><p><strong>00 05 00 16</strong> <strong>00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>指令码 00 映射源码 00 15(21)行</strong></p><p><strong>指令码05 映射源码00 16(22行)</strong></p><p>**B)**<strong>Code_info的第二个属性表之LocalVariableTable</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/22FD341F40F14C328FFA6AB06049ABFD/11143" alt="0" loading="lazy"></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16</strong> <strong>00 0B</strong> <strong>00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>attribute_name_index 00 0B指向我们的常量池11的位置</strong></p><p><strong>#11 = Utf8 LocalVariableTable</strong></p><p><strong>attribute_length表示属性的长度,后面的22个字节都是我们的属性类容</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B</strong> <strong>00 00 00 16</strong> <strong>00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>local_variable_table_length 00 02(表示有二个本地变量表)</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16</strong> <strong>00 02</strong> <strong>00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00 00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>Local_variale_info的变量表结构</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/70FEF17D7D0545FA98E849D10EFA85C3/11160" alt="0" loading="lazy"></p><p><strong>第一个变量表:</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02</strong> <strong>00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00</strong> <strong>00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>&quot;start_pc&quot;:&quot;u2(00 00 )-&gt;desc:这个局部变量的生命周期开始的字节码偏移量&quot;,</strong></p><p><strong>&quot;length:&quot;:&quot;u2(00 06)-&gt;作用范围覆盖的长度为6&quot;,</strong></p><p><strong>&quot;name_index&quot;:&quot;u2(00 0c)-&gt;字段的名称索引指向常量池12的位置 this&quot;,</strong></p><p><strong>&quot;desc_index&quot;:&quot;u2(00 0D)局部变量的描述符号索引-&gt;指向#13的位置Lcom/tuling/smlz/jvm/classbyatecode/TulingByteCode;&quot;,</strong></p><p><strong>&quot;index&quot;:&quot;u2(00 00)-&gt;desc:index是这个局部变量在栈帧局部变量表中Slot的位置&quot;</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/8C0F1149D4E4472BBCBF25811C9451BC/11171" alt="0" loading="lazy"></p><p><strong>第二个变量表:</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00</strong> <strong>00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>&quot;start_pc&quot;:&quot;u2(00 00 )-&gt;desc:这个局部变量的生命周期开始的字节码偏移量&quot;,</strong></p><p><strong>&quot;length:&quot;:&quot;u2(00 06)-&gt;作用范围覆盖的长度为6&quot;,</strong></p><p><strong>&quot;name_index&quot;:&quot;u2(00 05)-&gt;字段的名称索引指向常量池5的位置 userName&quot;,</strong></p><p><strong>&quot;desc_index&quot;:&quot;u2(00 06)局部变量的描述符号索引-&gt;指向#6的位置 Ljava/lang/String;&quot;,</strong></p><p><strong>&quot;index&quot;:&quot;u2(00 01)-&gt;desc:index是这个局部变量在栈帧局部变量表中Slot的1位置&quot;</strong></p><p>​ <img src="https://note.youdao.com/yws/public/resource/a21875fd4ab6e14a445d07e750cc6930/xmlnote/ED8830B23A314143B4BE69E123C43E80/11178" alt="0" loading="lazy"></p><p><strong>B)Code_info的第二个属性表之MethodParameters方法参数属性表</strong></p><p><strong>00 01 00 10 00 11 00 02 00 09 00 00</strong></p><p><strong>00 3E 00 02 00 02 00 00 00 06 2A 2B B5 00 02 B1</strong></p><p><strong>00 00 00 02 00 0A</strong> <strong>00 00 00 0A</strong> <strong>00 02 00 00 00 15</strong></p><p><strong>00 05 00 16 00 0B 00 00 00 16 00 02 00 00 00 06</strong></p><p><strong>00 0C 00 0D 00 00</strong> <strong>00 00 00 06 00 05 00 06 00 01</strong></p><p><strong>00 12 00 00 00 05 01 00 05 00 00</strong></p><p><strong>结构体:</strong></p>`,709),c=s("p",{"attribute_name_index:u2(0012)表示该属性的名称指向常量池#18的位置:MethodParameters,attribute_length:u4(00000005)-desc:属性的长度5,parameter_count:u1(01)-desc参数的个数1个,parameter_name_index:u2(0005)-desc:指向第五个常量池的常量userName,ACC_FLAG:U2(0000)-desc:表示任何权限都可以访问":""},"​ ",-1),g=s("p",null,[s("strong",null,"最后一部分:class文件的属性")],-1),l=s("p",null,[s("strong",null,"00 01"),p(),s("strong",null,"00 13 00 00 00 02 00 14")],-1),i=s("p",null,[s("strong",null,'"attribute_count(class文件的属性)":"u2(00 01)只有一个属性"')],-1),d=s("p",null,[s("strong",null,"属性结构体:")],-1),u=s("p",{"attribute_name_index:u2(0013)指向常量池中#19值为SourceFile,attribute_length:u4(00000002)表示属性接下来的长度为2,sourceFile_index:u2(0014)表示源文件的索引指向常量池20的位置:TulingByteCode.java":""},"​ ",-1),m=[r,c,g,l,i,d,u];function b(B,y){return o(),t("div",null,m)}const F=n(e,[["render",b],["__file","index.html.vue"]]);export{F as default};
