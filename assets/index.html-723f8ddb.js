import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as a,a as o,b as e,e as r,f as n}from"./app-18640bff.js";const p={},_=o("p",null,[o("strong",null,"系列课程介绍")],-1),h=o("p",null,"本次主要讲解Dubbo3.0，是Dubbo的一次重大升级，有很多的新特性，所以本次课程主要围绕这些新特性来进行讲解和分析。",-1),g=o("p",null,[o("strong",null,"代码地址")],-1),c={href:"https://gitee.com/archguide/rpc-zhouyu",target:"_blank",rel:"noopener noreferrer"},d=o("p",null,[o("strong",null,"什么是RPC")],-1),u=o("p",null,[o("strong",null,"维基百科"),e("是这么定义RPC的：")],-1),b={href:"https://zh.wikipedia.org/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97",target:"_blank",rel:"noopener noreferrer"},E=o("strong",null,"，远程过程调用",-1),f={href:"https://zh.wikipedia.org/wiki/%E7%B6%B2%E7%B5%A1%E5%82%B3%E8%BC%B8%E5%8D%94%E8%AD%B0",target:"_blank",rel:"noopener noreferrer"},k={href:"https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"},C={href:"https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4",target:"_blank",rel:"noopener noreferrer"},B={href:"https://zh.wikipedia.org/wiki/%E5%AD%90%E7%A8%8B%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"},A=o("strong",null,"发送请求-接受回应",-1),R={href:"https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},D=o("strong",null,"远程调用",-1),P=o("strong",null,"远程方法调用",-1),w={href:"https://zh.wikipedia.org/wiki/Java_RMI",target:"_blank",rel:"noopener noreferrer"},m=n("<p>所以，对于Java程序员而言，RPC就是<strong>远程方法调用</strong>。</p><p><strong>远程方法调用</strong>和<strong>本地方法调用</strong>是相对的两个概念，本地方法调用指的是进程内部的方法调用，而远程方法调用指的是两个进程内的方法相互调用。</p><p>如果实现远程方法调用，基本的就是通过网络，通过传输数据来进行调用。</p><p>所以就有了：</p><ol><li>RPC over Http：基于Http协议来传输数据</li><li>PRC over Tcp：基于Tcp协议来传输数据</li></ol><p>对于所传输的数据，可以交由RPC的双方来协商定义，但基本都会包括：</p><ol><li>调用的是哪个类或接口</li><li>调用的是哪个方法，方法名和方法参数类型（考虑方法重载）</li><li>调用方法的入参</li></ol><p>所以，我们其实可以看到RPC的自定义性是很高的，各个公司内部都可以实现自己的一套RPC框架，而<strong>Dubbo</strong>就是阿里所开源出来的一套RPC框架。</p><p><strong>什么是Dubbo</strong></p>",9),v={href:"http://dubbo.apache.org/zh/",target:"_blank",rel:"noopener noreferrer"},z=n("<p>目前，官网上是这么介绍的：<strong>Apache Dubbo 是一款高性能、轻量级的开源 Java</strong> <strong>服务****框架</strong></p><p>在几个月前，官网的介绍是：<strong>Apache Dubbo 是一款高性能、轻量级的开源 Java</strong> <strong>RPC****框架</strong></p><p>现在的介绍是：<strong>Apache Dubbo 是一款微服务框架，为大规模微服务实践提供高性能 RPC 通信、流量治理、可观测性等解决方案，涵盖 Java、Golang 等多种语言 SDK 实现</strong></p><p>为什么会将<strong>RPC</strong>改为<strong>服务</strong>？</p><p>Dubbo一开始的定位就是RPC，专注于两个服务之间的调用。但随着微服务的盛行，除开<strong>服务调用</strong>之外，Dubbo也在逐步的涉猎服务治理、服务监控、服务网关等等，所以现在的Dubbo目标已经不止是RPC框架了，而是和Spring Cloud类似想成为了一个<strong>服务</strong>框架。</p>",5);function x(J,F){const t=l("ExternalLinkIcon");return i(),a("div",null,[_,h,g,o("p",null,[e("手写Dubbo地址："),o("a",c,[e("https://gitee.com/archguide/rpc-zhouyu"),r(t)])]),d,u,o("p",null,[e("在"),o("a",b,[e("分布式计算"),r(t)]),E,e("（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信"),o("a",f,[e("协议"),r(t)]),e("。该协议允许运行于一台计算机的"),o("a",k,[e("程序"),r(t)]),e("调用另一个"),o("a",C,[e("地址空间"),r(t)]),e("（通常为一个开放网络的一台计算机）的"),o("a",B,[e("子程序"),r(t)]),e("，而程序员就像调用本地程序一样，无需额外地为这个交互作用编程（无需关注细节）。RPC是一种服务器-客户端（Client/Server）模式，经典实现是一个通过"),A,e("进行信息交互的系统。")]),o("p",null,[e("如果涉及的软件采用"),o("a",R,[e("面向对象编程"),r(t)]),e("，那么远程过程调用亦可称作"),D,e("或"),P,e("，例："),o("a",w,[e("Java RMI"),r(t)])]),m,o("p",null,[e("官网地址："),o("a",v,[e("http://dubbo.apache.org/zh/"),r(t)])]),z])}const S=s(p,[["render",x],["__file","index.html.vue"]]);export{S as default};
