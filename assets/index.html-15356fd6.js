const e=JSON.parse('{"key":"v-5d29271a","path":"/pages/c33c5f/","title":"CPU缓存架构&缓存一致性协议详解","lang":"zh-CN","frontmatter":{"title":"CPU缓存架构&缓存一致性协议详解","date":"2022-11-15T15:19:03.000Z","permalink":"/pages/c33c5f/","author":{"name":"江"},"category":["并发编程"],"description":"CPU高速缓存（Cache Memory） CPU缓存即高速缓冲存储器，是位于CPU与主内存间的一种容量较小但速度很高的存储器。由于CPU的速度远高于主内存，CPU直接从内存中存取数据要等待一定时间周期，Cache中保存着CPU刚用过或循环使用的一部分数据，当CPU再次使用该部分数据时可从Cache中直接调用,减少CPU的等待时间，提高了系统的效率。 ​","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/c33c5f/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"CPU缓存架构&缓存一致性协议详解"}],["meta",{"property":"og:description","content":"CPU高速缓存（Cache Memory） CPU缓存即高速缓冲存储器，是位于CPU与主内存间的一种容量较小但速度很高的存储器。由于CPU的速度远高于主内存，CPU直接从内存中存取数据要等待一定时间周期，Cache中保存着CPU刚用过或循环使用的一部分数据，当CPU再次使用该部分数据时可从Cache中直接调用,减少CPU的等待时间，提高了系统的效率。 ​"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2022-11-15T15:19:03.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CPU缓存架构&缓存一致性协议详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-15T15:19:03.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"CPU高速缓存（Cache Memory）","slug":"cpu高速缓存-cache-memory","link":"#cpu高速缓存-cache-memory","children":[{"level":3,"title":"多CPU多核缓存架构","slug":"多cpu多核缓存架构","link":"#多cpu多核缓存架构","children":[]}]},{"level":2,"title":"缓存一致性的要求","slug":"缓存一致性的要求","link":"#缓存一致性的要求","children":[{"level":3,"title":"写传播（Write Propagation）","slug":"写传播-write-propagation","link":"#写传播-write-propagation","children":[]},{"level":3,"title":"事务串行化（Transaction Serialization）","slug":"事务串行化-transaction-serialization","link":"#事务串行化-transaction-serialization","children":[]},{"level":3,"title":"一致性机制（Coherence mechanisms）","slug":"一致性机制-coherence-mechanisms","link":"#一致性机制-coherence-mechanisms","children":[]}]},{"level":2,"title":"总线仲裁机制","slug":"总线仲裁机制","link":"#总线仲裁机制","children":[{"level":3,"title":"总线锁定","slug":"总线锁定","link":"#总线锁定","children":[]},{"level":3,"title":"缓存锁定","slug":"缓存锁定","link":"#缓存锁定","children":[]}]},{"level":2,"title":"总线窥探(Bus Snooping)","slug":"总线窥探-bus-snooping","link":"#总线窥探-bus-snooping","children":[{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":3,"title":"窥探协议类型","slug":"窥探协议类型","link":"#窥探协议类型","children":[]}]},{"level":2,"title":"一致性协议（Coherence protocol）","slug":"一致性协议-coherence-protocol","link":"#一致性协议-coherence-protocol","children":[{"level":3,"title":"MESI协议","slug":"mesi协议","link":"#mesi协议","children":[]}]},{"level":2,"title":"伪共享的问题","slug":"伪共享的问题","link":"#伪共享的问题","children":[{"level":3,"title":"linux下查看Cache Line大小","slug":"linux下查看cache-line大小","link":"#linux下查看cache-line大小","children":[]},{"level":3,"title":"避免伪共享方案","slug":"避免伪共享方案","link":"#避免伪共享方案","children":[]}]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":12.61,"words":3784},"filePathRelative":"10.并发编程/01.CPU缓存架构&缓存一致性协议详解.md","localizedDate":"2022年11月15日","excerpt":"<h2> CPU高速缓存（Cache Memory）</h2>\\n<p>CPU缓存即高速缓冲存储器，是位于CPU与主内存间的一种容量较小但速度很高的存储器。由于CPU的速度远高于主内存，CPU直接从内存中存取数据要等待一定时间周期，Cache中保存着CPU刚用过或循环使用的一部分数据，当CPU再次使用该部分数据时可从Cache中直接调用,减少CPU的等待时间，提高了系统的效率。</p>\\n<p>​    <img src=\\"https://img.jssjqd.cn/202211151519740.png\\" alt=\\"image-20221115151940935\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{e as data};
