const t=JSON.parse('{"key":"v-e6374c28","path":"/pages/d02edd/","title":"RabbitMQ实现消费端异常处理","lang":"zh-CN","frontmatter":{"title":"RabbitMQ实现消费端异常处理","date":"2021-12-27T04:48:27.000Z","permalink":"/pages/d02edd/","author":{"name":"江"},"category":["rabbitmq"],"description":"RabbitMQ 实现消费端异常处理 前言 思考：因为在开发项目时，RabbitMQ 的消费端出现了异常（工具类操作文件时，未找到文件路径）。由于在此之前并未对该异常进行预判，导致异常出现后，消费端仍然对 MQ 的消息进行消费，但是出现异常后无法对 MQ 进行回复，所以造成后果消费端一直消费该条信息，进入死循环！ 从而引发了自己的思考：1. 开发时难免会出现异常，这种异常如果事先未预判，那么在程序运行中，消费端该怎么避免以上出现的死循环；2. 如果事先预判到异常，对其进行了抛出或捕获，消费端又该如何表现？","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/d02edd/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"RabbitMQ实现消费端异常处理"}],["meta",{"property":"og:description","content":"RabbitMQ 实现消费端异常处理 前言 思考：因为在开发项目时，RabbitMQ 的消费端出现了异常（工具类操作文件时，未找到文件路径）。由于在此之前并未对该异常进行预判，导致异常出现后，消费端仍然对 MQ 的消息进行消费，但是出现异常后无法对 MQ 进行回复，所以造成后果消费端一直消费该条信息，进入死循环！ 从而引发了自己的思考：1. 开发时难免会出现异常，这种异常如果事先未预判，那么在程序运行中，消费端该怎么避免以上出现的死循环；2. 如果事先预判到异常，对其进行了抛出或捕获，消费端又该如何表现？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2021-12-27T04:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ实现消费端异常处理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-27T04:48:27.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"RabbitMQ 实现消费端异常处理","slug":"rabbitmq-实现消费端异常处理","link":"#rabbitmq-实现消费端异常处理","children":[]},{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":6.71,"words":2013},"filePathRelative":"30.分布式框架/05.消息队列/00.RabbitMQ/RabbitMQ实现消费端异常处理.md","localizedDate":"2021年12月27日","excerpt":"<h2> RabbitMQ 实现消费端异常处理</h2>\\n<h2> 前言</h2>\\n<p>思考：因为在开发项目时，RabbitMQ 的消费端出现了异常（工具类操作文件时，未找到文件路径）。由于在此之前并未对该异常进行预判，导致异常出现后，消费端仍然对 MQ 的消息进行消费，但是出现异常后无法对 MQ 进行回复，所以造成后果<strong>消费端一直消费该条信息，进入死循环！</strong></p>\\n<p>从而引发了自己的思考：1. 开发时难免会出现异常，这种异常如果事先未预判，那么在程序运行中，消费端该怎么避免以上出现的死循环；2. 如果事先预判到异常，对其进行了抛出或捕获，消费端又该如何表现？</p>","autoDesc":true}');export{t as data};
