const a=JSON.parse('{"key":"v-587b631d","path":"/pages/1b65ca/","title":"Kafka基本原理","lang":"zh-CN","frontmatter":{"title":"Kafka基本原理","date":"2023-04-02T22:49:56.000Z","permalink":"/pages/1b65ca/","author":{"name":"江"},"category":["消息队列","Kafka"],"description":"Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、Storm/Spark流式处理引擎，web/nginx日志、访问日志，消息服务等等，用scala语言编写，Linkedin于2010年贡献给了Apache基金会并成为顶级开源 项目。 Kafka的使用场景 日志收集：一个公司可以用Kafka收集各种服务的log，通过kafka以统一接口服务的方式开放给各种consumer，例如hadoop、Hbase、Solr等。 消息系统：解耦和生产者和消费者、缓存消息等。 用户活动跟踪：Kafka经常被用来记录web用户或者app用户的各种活动，如浏览网页、搜索、点击等活动，这些活动信息被各个服务器发布到kafka的topic中，然后订阅者通过订阅这些topic来做实时的监控分析，或者装载到hadoop、数据仓库中做离线分析和挖掘。 运营指标：Kafka也经常用来记录运营监控数据。包括收集各种分布式应用的数据，生产各种操作的集中反馈，比如报警和报告。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/1b65ca/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"Kafka基本原理"}],["meta",{"property":"og:description","content":"Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、Storm/Spark流式处理引擎，web/nginx日志、访问日志，消息服务等等，用scala语言编写，Linkedin于2010年贡献给了Apache基金会并成为顶级开源 项目。 Kafka的使用场景 日志收集：一个公司可以用Kafka收集各种服务的log，通过kafka以统一接口服务的方式开放给各种consumer，例如hadoop、Hbase、Solr等。 消息系统：解耦和生产者和消费者、缓存消息等。 用户活动跟踪：Kafka经常被用来记录web用户或者app用户的各种活动，如浏览网页、搜索、点击等活动，这些活动信息被各个服务器发布到kafka的topic中，然后订阅者通过订阅这些topic来做实时的监控分析，或者装载到hadoop、数据仓库中做离线分析和挖掘。 运营指标：Kafka也经常用来记录运营监控数据。包括收集各种分布式应用的数据，生产各种操作的集中反馈，比如报警和报告。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2023-04-02T22:49:56.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kafka基本原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-02T22:49:56.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"Kafka的使用场景","slug":"kafka的使用场景","link":"#kafka的使用场景","children":[]},{"level":2,"title":"Kafka基本概念","slug":"kafka基本概念","link":"#kafka基本概念","children":[]},{"level":2,"title":"kafka基本使用","slug":"kafka基本使用","link":"#kafka基本使用","children":[{"level":3,"title":"docker版本kafka安装","slug":"docker版本kafka安装","link":"#docker版本kafka安装","children":[]},{"level":3,"title":"普通版本kafka安装","slug":"普通版本kafka安装","link":"#普通版本kafka安装","children":[]}]},{"level":2,"title":"主题Topic和消息日志Log","slug":"主题topic和消息日志log","link":"#主题topic和消息日志log","children":[]},{"level":2,"title":"kafka集群实战","slug":"kafka集群实战","link":"#kafka集群实战","children":[{"level":3,"title":"集群消费","slug":"集群消费","link":"#集群消费","children":[]},{"level":3,"title":"消费顺序","slug":"消费顺序","link":"#消费顺序","children":[]},{"level":3,"title":"Java客户端访问Kafka","slug":"java客户端访问kafka","link":"#java客户端访问kafka","children":[]}]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":23.27,"words":6981},"filePathRelative":"30.分布式框架/05.消息队列/01.Kafka/00.Kafka基本原理.md","localizedDate":"2023年4月3日","excerpt":"<p>Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、Storm/Spark流式处理引擎，web/nginx日志、访问日志，消息服务等等，用scala语言编写，Linkedin于2010年贡献给了Apache基金会并成为顶级开源 项目。</p>\\n<h2> Kafka的使用场景</h2>\\n<ul>\\n<li>日志收集：一个公司可以用Kafka收集各种服务的log，通过kafka以统一接口服务的方式开放给各种consumer，例如hadoop、Hbase、Solr等。</li>\\n<li>消息系统：解耦和生产者和消费者、缓存消息等。</li>\\n<li>用户活动跟踪：Kafka经常被用来记录web用户或者app用户的各种活动，如浏览网页、搜索、点击等活动，这些活动信息被各个服务器发布到kafka的topic中，然后订阅者通过订阅这些topic来做实时的监控分析，或者装载到hadoop、数据仓库中做离线分析和挖掘。</li>\\n<li>运营指标：Kafka也经常用来记录运营监控数据。包括收集各种分布式应用的数据，生产各种操作的集中反馈，比如报警和报告。</li>\\n</ul>","autoDesc":true}');export{a as data};
