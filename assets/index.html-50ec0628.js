const e=JSON.parse('{"key":"v-31fdd1bf","path":"/pages/5dbb63/","title":"Zookeeper特性与节点数据类型详解","lang":"zh-CN","frontmatter":{"title":"Zookeeper特性与节点数据类型详解","date":"2023-03-26T16:59:20.000Z","permalink":"/pages/5dbb63/","author":{"name":"江"},"category":["Zookeeper"],"description":"CAP&amp;Base理论 CAP 理论 CAP 理论指出对于一个分布式计算系统来说，不可能同时满足以下三点： 一致性：在分布式环境中，一致性是指数据在多个副本之间是否能够保持一致的特性，等同于所有节点访问同一份最新的数据副本。在一致性的需求下，当一个系统在数据一致的状态下执行更新操作后，应该保证系统的数据仍然处于一致的状态。 可用性：每次请求都能获取到正确的响应，但是不保证获取的数据为最新数据。 分区容错性：分布式系统在遇到任何网络分区故障的时候，仍然需要能够保证对外提供满足一致性和可用性的服务，除非是整个网络环境都发生了故障。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/5dbb63/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"Zookeeper特性与节点数据类型详解"}],["meta",{"property":"og:description","content":"CAP&amp;Base理论 CAP 理论 CAP 理论指出对于一个分布式计算系统来说，不可能同时满足以下三点： 一致性：在分布式环境中，一致性是指数据在多个副本之间是否能够保持一致的特性，等同于所有节点访问同一份最新的数据副本。在一致性的需求下，当一个系统在数据一致的状态下执行更新操作后，应该保证系统的数据仍然处于一致的状态。 可用性：每次请求都能获取到正确的响应，但是不保证获取的数据为最新数据。 分区容错性：分布式系统在遇到任何网络分区故障的时候，仍然需要能够保证对外提供满足一致性和可用性的服务，除非是整个网络环境都发生了故障。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2023-03-26T16:59:20.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zookeeper特性与节点数据类型详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-26T16:59:20.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"CAP&Base理论","slug":"cap-base理论","link":"#cap-base理论","children":[{"level":3,"title":"CAP 理论","slug":"cap-理论","link":"#cap-理论","children":[]},{"level":3,"title":"BASE 理论","slug":"base-理论","link":"#base-理论","children":[]}]},{"level":2,"title":"Zookeeper介绍","slug":"zookeeper介绍","link":"#zookeeper介绍","children":[{"level":3,"title":"什么是Zookeeper","slug":"什么是zookeeper","link":"#什么是zookeeper","children":[]}]},{"level":2,"title":"Zookeeper实战","slug":"zookeeper实战","link":"#zookeeper实战","children":[{"level":3,"title":"Zookeeper安装","slug":"zookeeper安装","link":"#zookeeper安装","children":[]},{"level":3,"title":"客户端命令行操作","slug":"客户端命令行操作","link":"#客户端命令行操作","children":[]},{"level":3,"title":"ZooKeeper数据结构","slug":"zookeeper数据结构","link":"#zookeeper数据结构","children":[]},{"level":3,"title":"Zookeeper集群","slug":"zookeeper集群","link":"#zookeeper集群","children":[]}]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":23.82,"words":7146},"filePathRelative":"30.分布式框架/04.Zookeeper/00.Zookeeper特性与节点数据类型详解.md","localizedDate":"2023年3月27日","excerpt":"<h2> CAP&amp;Base理论</h2>\\n<h3> CAP 理论</h3>\\n<p>CAP 理论指出对于一个分布式计算系统来说，不可能同时满足以下三点：</p>\\n<ul>\\n<li><strong>一致性</strong>：在分布式环境中，一致性是指数据在多个副本之间是否能够保持一致的特性，等同于所有节点访问同一份最新的数据副本。在一致性的需求下，当一个系统在数据一致的状态下执行更新操作后，应该保证系统的数据仍然处于一致的状态。</li>\\n<li><strong>可用性</strong>：每次请求都能获取到正确的响应，但是不保证获取的数据为最新数据。</li>\\n<li><strong>分区容错性</strong>：分布式系统在遇到任何网络分区故障的时候，仍然需要能够保证对外提供满足一致性和可用性的服务，除非是整个网络环境都发生了故障。</li>\\n</ul>","autoDesc":true}');export{e as data};
