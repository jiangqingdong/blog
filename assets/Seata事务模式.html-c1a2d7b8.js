const t=JSON.parse('{"key":"v-9cd7cba4","path":"/%E5%BE%AE%E6%9C%8D%E5%8A%A1/seata/Seata%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html","title":"Seata事务模式","lang":"zh-CN","frontmatter":{"title":"Seata事务模式","date":"2023-05-10T04:11:17.000Z","description":"Seata AT模式 Seata AT模式的设计思路 Seata AT模式的核心是对业务无侵入，是一种改进后的两阶段提交，其设计思路如下: 一阶段 业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。 二阶段 提交异步化，非常快速地完成。 回滚通过一阶段的回滚日志进行反向补偿。 一阶段 业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。核心在于对业务sql进行解析，转换成undo log，并同时入库，这是怎么做的呢？","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A1/seata/Seata%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"Seata事务模式"}],["meta",{"property":"og:description","content":"Seata AT模式 Seata AT模式的设计思路 Seata AT模式的核心是对业务无侵入，是一种改进后的两阶段提交，其设计思路如下: 一阶段 业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。 二阶段 提交异步化，非常快速地完成。 回滚通过一阶段的回滚日志进行反向补偿。 一阶段 业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。核心在于对业务sql进行解析，转换成undo log，并同时入库，这是怎么做的呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-24T11:27:53.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2023-05-10T04:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-24T11:27:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Seata事务模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-10T04:11:17.000Z\\",\\"dateModified\\":\\"2023-05-24T11:27:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"Seata AT模式","slug":"seata-at模式","link":"#seata-at模式","children":[{"level":3,"title":"Seata AT模式的设计思路","slug":"seata-at模式的设计思路","link":"#seata-at模式的设计思路","children":[]}]},{"level":2,"title":"Seata XA模式","slug":"seata-xa模式","link":"#seata-xa模式","children":[{"level":3,"title":"整体机制","slug":"整体机制","link":"#整体机制","children":[]},{"level":3,"title":"Spring Cloud Alibaba整合Seata XA实战","slug":"spring-cloud-alibaba整合seata-xa实战","link":"#spring-cloud-alibaba整合seata-xa实战","children":[]}]},{"level":2,"title":"Seata TCC模式","slug":"seata-tcc模式","link":"#seata-tcc模式","children":[{"level":3,"title":"TCC 模式","slug":"tcc-模式","link":"#tcc-模式","children":[]},{"level":3,"title":"Seata TCC模式接口如何改造","slug":"seata-tcc模式接口如何改造","link":"#seata-tcc模式接口如何改造","children":[]},{"level":3,"title":"TCC如何控制异常","slug":"tcc如何控制异常","link":"#tcc如何控制异常","children":[]},{"level":3,"title":"Spring Cloud Alibaba整合Seata TCC实战","slug":"spring-cloud-alibaba整合seata-tcc实战","link":"#spring-cloud-alibaba整合seata-tcc实战","children":[]}]}],"git":{"createdTime":1684927673000,"updatedTime":1684927673000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":13.62,"words":4087},"filePathRelative":"微服务/seata/Seata事务模式.md","localizedDate":"2023年5月10日","excerpt":"<h2> Seata AT模式</h2>\\n<h3> Seata AT模式的设计思路</h3>\\n<p>Seata AT模式的核心是对业务无侵入，是一种改进后的两阶段提交，其设计思路如下:</p>\\n<ul>\\n<li>\\n<p>一阶段</p>\\n<ul>\\n<li>业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。</li>\\n</ul>\\n</li>\\n<li>\\n<p>二阶段</p>\\n<ul>\\n<li>提交异步化，非常快速地完成。</li>\\n<li>回滚通过一阶段的回滚日志进行反向补偿。</li>\\n</ul>\\n</li>\\n</ul>\\n<p><strong>一阶段</strong></p>\\n<p>业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。核心在于对业务sql进行解析，转换成undo log，并同时入库，这是怎么做的呢？</p>","autoDesc":true}');export{t as data};
