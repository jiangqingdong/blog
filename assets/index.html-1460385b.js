const n=JSON.parse('{"key":"v-05ad46d2","path":"/pages/9de5ec/","title":"阻塞队列BlockingQueue实战及原理分析","lang":"zh-CN","frontmatter":{"title":"阻塞队列BlockingQueue实战及原理分析","date":"2022-12-01T00:01:49.000Z","permalink":"/pages/9de5ec/","author":{"name":"江"},"category":["并发编程"],"description":"阻塞队列前置知识： 1.数组和链表数据结构 2.锁和线程阻塞唤醒机制 (cas ReentrantLock+Condition) 阻塞队列介绍 Queue接口 public interface Queue&lt;E&gt; extends Collection&lt;E&gt; { //添加一个元素，添加成功返回true, 如果队列满了，就会抛出异常 boolean add(E e); //添加一个元素，添加成功返回true, 如果队列满了，返回false boolean offer(E e); //返回并删除队首元素，队列为空则抛出异常 E remove(); //返回并删除队首元素，队列为空则返回null E poll(); //返回队首元素，但不移除，队列为空则抛出异常 E element(); //获取队首元素，但不移除，队列为空则返回null E peek(); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/9de5ec/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"阻塞队列BlockingQueue实战及原理分析"}],["meta",{"property":"og:description","content":"阻塞队列前置知识： 1.数组和链表数据结构 2.锁和线程阻塞唤醒机制 (cas ReentrantLock+Condition) 阻塞队列介绍 Queue接口 public interface Queue&lt;E&gt; extends Collection&lt;E&gt; { //添加一个元素，添加成功返回true, 如果队列满了，就会抛出异常 boolean add(E e); //添加一个元素，添加成功返回true, 如果队列满了，返回false boolean offer(E e); //返回并删除队首元素，队列为空则抛出异常 E remove(); //返回并删除队首元素，队列为空则返回null E poll(); //返回队首元素，但不移除，队列为空则抛出异常 E element(); //获取队首元素，但不移除，队列为空则返回null E peek(); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2022-12-01T00:01:49.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阻塞队列BlockingQueue实战及原理分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-01T00:01:49.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"阻塞队列介绍","slug":"阻塞队列介绍","link":"#阻塞队列介绍","children":[]},{"level":2,"title":"常见阻塞队列","slug":"常见阻塞队列","link":"#常见阻塞队列","children":[{"level":3,"title":"ArrayBlockingQueue","slug":"arrayblockingqueue","link":"#arrayblockingqueue","children":[]},{"level":3,"title":"LinkedBlockingQueue","slug":"linkedblockingqueue","link":"#linkedblockingqueue","children":[]},{"level":3,"title":"SynchronousQueue","slug":"synchronousqueue","link":"#synchronousqueue","children":[]},{"level":3,"title":"PriorityBlockingQueue","slug":"priorityblockingqueue","link":"#priorityblockingqueue","children":[]},{"level":3,"title":"DelayQueue","slug":"delayqueue","link":"#delayqueue","children":[]}]},{"level":2,"title":"如何选择适合的阻塞队列","slug":"如何选择适合的阻塞队列","link":"#如何选择适合的阻塞队列","children":[]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":25.23,"words":7570},"filePathRelative":"10.并发编程/90.阻塞队列BlockingQueue实战及原理分析.md","localizedDate":"2022年12月1日","excerpt":"<p>阻塞队列前置知识：</p>\\n<p>1.数组和链表数据结构</p>\\n<p>2.锁和线程阻塞唤醒机制 (cas  ReentrantLock+Condition)</p>\\n<h2> 阻塞队列介绍</h2>\\n<p><strong>Queue接口</strong></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Queue</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">E</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Collection</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">E</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//添加一个元素，添加成功返回true, 如果队列满了，就会抛出异常</span>\\n    <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">E</span> e<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//添加一个元素，添加成功返回true, 如果队列满了，返回false</span>\\n    <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">offer</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">E</span> e<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//返回并删除队首元素，队列为空则抛出异常</span>\\n    <span class=\\"token class-name\\">E</span> <span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//返回并删除队首元素，队列为空则返回null</span>\\n    <span class=\\"token class-name\\">E</span> <span class=\\"token function\\">poll</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//返回队首元素，但不移除，队列为空则抛出异常</span>\\n    <span class=\\"token class-name\\">E</span> <span class=\\"token function\\">element</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//获取队首元素，但不移除，队列为空则返回null</span>\\n    <span class=\\"token class-name\\">E</span> <span class=\\"token function\\">peek</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>     \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
