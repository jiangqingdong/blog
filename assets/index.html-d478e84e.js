const e=JSON.parse('{"key":"v-04bd5498","path":"/pages/9a014b/","title":"RabbitMQ上手以及集群架构","lang":"zh-CN","frontmatter":{"title":"RabbitMQ上手以及集群架构","date":"2022-11-07T11:28:12.000Z","permalink":"/pages/9a014b/","author":{"name":"江"},"category":["消息队列","RabbitMQ"],"description":"MQ介绍 这一部分理论介绍，其实在每个MQ产品中都是大致相同的，可以参考RocketMQ的部分。 什么是MQ？为什么要用MQ？ MQ：MessageQueue，消息队列。 队列，是一种FIFO先进先出的数据结构。消息由生产者发送到MQ进行排队，然后按原来的顺序交由消息的消费者进行处理。QQ和微信就是典型的MQ。 MQ的作用主要有以下三个方面： 异步 例子：快递员发快递，直接到客户家效率会很低。引入菜鸟驿站后，快递员只需要把快递放到菜鸟驿站，就可以继续发其他快递去了。客户再按自己的时间安排去菜鸟驿站取快递。 作用：异步能提高系统的响应速度、吞吐量。 解耦 例子：《Thinking in JAVA》很经典，但是都是英文，我们看不懂，所以需要编辑社，将文章翻译成其他语言，这样就可以完成英语与其他语言的交流。 作用： 1、服务之间进行解耦，才可以减少服务之间的影响。提高系统整体的稳定性以及可扩展性。 2、另外，解耦后可以实现数据分发。生产者发送一个消息后，可以由一个或者多个消费者进行消费，并且消费者的增加或者减少对生产者没有影响。 削峰 例子：长江每年都会涨水，但是下游出水口的速度是基本稳定的，所以会涨水。引入三峡大坝后，可以把水储存起来，下游慢慢排水。 作用：以稳定的系统资源应对突发的流量冲击。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/9a014b/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"RabbitMQ上手以及集群架构"}],["meta",{"property":"og:description","content":"MQ介绍 这一部分理论介绍，其实在每个MQ产品中都是大致相同的，可以参考RocketMQ的部分。 什么是MQ？为什么要用MQ？ MQ：MessageQueue，消息队列。 队列，是一种FIFO先进先出的数据结构。消息由生产者发送到MQ进行排队，然后按原来的顺序交由消息的消费者进行处理。QQ和微信就是典型的MQ。 MQ的作用主要有以下三个方面： 异步 例子：快递员发快递，直接到客户家效率会很低。引入菜鸟驿站后，快递员只需要把快递放到菜鸟驿站，就可以继续发其他快递去了。客户再按自己的时间安排去菜鸟驿站取快递。 作用：异步能提高系统的响应速度、吞吐量。 解耦 例子：《Thinking in JAVA》很经典，但是都是英文，我们看不懂，所以需要编辑社，将文章翻译成其他语言，这样就可以完成英语与其他语言的交流。 作用： 1、服务之间进行解耦，才可以减少服务之间的影响。提高系统整体的稳定性以及可扩展性。 2、另外，解耦后可以实现数据分发。生产者发送一个消息后，可以由一个或者多个消费者进行消费，并且消费者的增加或者减少对生产者没有影响。 削峰 例子：长江每年都会涨水，但是下游出水口的速度是基本稳定的，所以会涨水。引入三峡大坝后，可以把水储存起来，下游慢慢排水。 作用：以稳定的系统资源应对突发的流量冲击。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2022-11-07T11:28:12.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ上手以及集群架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-07T11:28:12.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"MQ介绍","slug":"mq介绍","link":"#mq介绍","children":[{"level":3,"title":"什么是MQ？为什么要用MQ？","slug":"什么是mq-为什么要用mq","link":"#什么是mq-为什么要用mq","children":[]},{"level":3,"title":"MQ的优缺点","slug":"mq的优缺点","link":"#mq的优缺点","children":[]},{"level":3,"title":"几大MQ产品特点比较","slug":"几大mq产品特点比较","link":"#几大mq产品特点比较","children":[]}]},{"level":2,"title":"Rabbitmq安装","slug":"rabbitmq安装","link":"#rabbitmq安装","children":[{"level":3,"title":"实验环境","slug":"实验环境","link":"#实验环境","children":[]},{"level":3,"title":"版本选择","slug":"版本选择","link":"#版本选择","children":[]},{"level":3,"title":"安装Erlang语言包","slug":"安装erlang语言包","link":"#安装erlang语言包","children":[]},{"level":3,"title":"安装RabbitMQ:","slug":"安装rabbitmq","link":"#安装rabbitmq","children":[]}]},{"level":2,"title":"RabbitMQ集群搭建","slug":"rabbitmq集群搭建","link":"#rabbitmq集群搭建","children":[{"level":3,"title":"搭建普通集群","slug":"搭建普通集群","link":"#搭建普通集群","children":[]},{"level":3,"title":"搭建镜像集群","slug":"搭建镜像集群","link":"#搭建镜像集群","children":[]},{"level":3,"title":"RabbitMQ基础使用","slug":"rabbitmq基础使用","link":"#rabbitmq基础使用","children":[]}]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":16.09,"words":4826},"filePathRelative":"30.分布式框架/05.消息队列/00.RabbitMQ/00.RabbitMQ上手以及集群机构.md","localizedDate":"2022年11月7日","excerpt":"<h2> MQ介绍</h2>\\n<blockquote>\\n<p>这一部分理论介绍，其实在每个MQ产品中都是大致相同的，可以参考RocketMQ的部分。</p>\\n</blockquote>\\n<h3> 什么是MQ？为什么要用MQ？</h3>\\n<p><strong>MQ：MessageQueue</strong>，消息队列。 队列，是一种FIFO先进先出的数据结构。消息由生产者发送到MQ进行排队，然后按原来的顺序交由消息的消费者进行处理。QQ和微信就是典型的MQ。</p>\\n<p>MQ的作用主要有以下三个方面：</p>\\n<ul>\\n<li>\\n<p><strong>异步</strong></p>\\n<p>例子：快递员发快递，直接到客户家效率会很低。引入菜鸟驿站后，快递员只需要把快递放到菜鸟驿站，就可以继续发其他快递去了。客户再按自己的时间安排去菜鸟驿站取快递。</p>\\n<p>作用：异步能提高系统的响应速度、吞吐量。</p>\\n</li>\\n<li>\\n<p><strong>解耦</strong></p>\\n<p>例子：《Thinking in JAVA》很经典，但是都是英文，我们看不懂，所以需要编辑社，将文章翻译成其他语言，这样就可以完成英语与其他语言的交流。</p>\\n<p>作用：</p>\\n<p>1、服务之间进行解耦，才可以减少服务之间的影响。提高系统整体的稳定性以及可扩展性。</p>\\n<p>2、另外，解耦后可以实现数据分发。生产者发送一个消息后，可以由一个或者多个消费者进行消费，并且消费者的增加或者减少对生产者没有影响。</p>\\n</li>\\n<li>\\n<p><strong>削峰</strong></p>\\n<p>例子：长江每年都会涨水，但是下游出水口的速度是基本稳定的，所以会涨水。引入三峡大坝后，可以把水储存起来，下游慢慢排水。</p>\\n<p>作用：以稳定的系统资源应对突发的流量冲击。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
