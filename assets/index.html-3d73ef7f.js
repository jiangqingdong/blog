const e=JSON.parse('{"key":"v-a84ad87a","path":"/pages/ca878c/","title":"深入理解Java线程","lang":"zh-CN","frontmatter":{"title":"深入理解Java线程","date":"2022-11-05T00:19:33.000Z","permalink":"/pages/ca878c/","author":{"name":"江"},"category":["并发编程"],"description":"1.CAS涉及到用户模式到内核模式的切换吗？ 2.为什么说创建Java线程的方式本质上只有一种？Java线程和go语言的协程有什么区别？ 3.如何优雅的终止线程？ 4.Java线程之间如何通信的，有哪些方式？ 线程基础知识 回顾：程序在计算机上是如何执行的？ 线程和进程 进程 程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至CPU，数据加载至内存。指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存和IO。 当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。 进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）。 操作系统会以进程为单位，分配系统资源（CPU时间片、内存等资源），进程是资源分配的最小单位。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/pages/ca878c/"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"深入理解Java线程"}],["meta",{"property":"og:description","content":"1.CAS涉及到用户模式到内核模式的切换吗？ 2.为什么说创建Java线程的方式本质上只有一种？Java线程和go语言的协程有什么区别？ 3.如何优雅的终止线程？ 4.Java线程之间如何通信的，有哪些方式？ 线程基础知识 回顾：程序在计算机上是如何执行的？ 线程和进程 进程 程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至CPU，数据加载至内存。指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存和IO。 当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。 进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）。 操作系统会以进程为单位，分配系统资源（CPU时间片、内存等资源），进程是资源分配的最小单位。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-01T18:24:48.000Z"}],["meta",{"property":"article:author","content":"江"}],["meta",{"property":"article:published_time","content":"2022-11-05T00:19:33.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-01T18:24:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解Java线程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-05T00:19:33.000Z\\",\\"dateModified\\":\\"2023-08-01T18:24:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"江\\"}]}"]]},"headers":[{"level":2,"title":"线程基础知识","slug":"线程基础知识","link":"#线程基础知识","children":[{"level":3,"title":"线程和进程","slug":"线程和进程","link":"#线程和进程","children":[]},{"level":3,"title":"线程的同步互斥","slug":"线程的同步互斥","link":"#线程的同步互斥","children":[]},{"level":3,"title":"上下文切换（Context switch）","slug":"上下文切换-context-switch","link":"#上下文切换-context-switch","children":[]},{"level":3,"title":"内核模式（Kernel Mode）vs 用户模式（User Mode）","slug":"内核模式-kernel-mode-vs-用户模式-user-mode","link":"#内核模式-kernel-mode-vs-用户模式-user-mode","children":[]},{"level":3,"title":"操作系统层面线程生命周期","slug":"操作系统层面线程生命周期","link":"#操作系统层面线程生命周期","children":[]}]},{"level":2,"title":"Java线程详解","slug":"java线程详解","link":"#java线程详解","children":[{"level":3,"title":"Java线程的实现方式","slug":"java线程的实现方式","link":"#java线程的实现方式","children":[]},{"level":3,"title":"Java线程实现原理","slug":"java线程实现原理","link":"#java线程实现原理","children":[]},{"level":3,"title":"Java线程的调度机制","slug":"java线程的调度机制","link":"#java线程的调度机制","children":[]},{"level":3,"title":"Java线程的生命周期","slug":"java线程的生命周期","link":"#java线程的生命周期","children":[]},{"level":3,"title":"Thread常用方法","slug":"thread常用方法","link":"#thread常用方法","children":[]},{"level":3,"title":"Java线程的中断机制","slug":"java线程的中断机制","link":"#java线程的中断机制","children":[]},{"level":3,"title":"Java线程间通信","slug":"java线程间通信","link":"#java线程间通信","children":[]}]}],"git":{"createdTime":1690914288000,"updatedTime":1690914288000,"contributors":[{"name":"jiangqingdong","email":"thejqd@gmail.com","commits":1}]},"readingTime":{"minutes":26.08,"words":7825},"filePathRelative":"10.并发编程/30.深入理解Java线程.md","localizedDate":"2022年11月5日","excerpt":"<p><strong>1.CAS涉及到用户模式到内核模式的切换吗？</strong></p>\\n<p><strong>2.为什么说创建Java线程的方式本质上只有一种？Java线程和go语言的协程有什么区别？</strong></p>\\n<p><strong>3.如何优雅的终止线程？</strong></p>\\n<p><strong>4.Java线程之间如何通信的，有哪些方式？</strong></p>\\n<h2> 线程基础知识</h2>\\n<p>回顾：程序在计算机上是如何执行的？</p>\\n<h3> 线程和进程</h3>\\n<p><strong>进程</strong></p>\\n<ul>\\n<li>\\n<p>程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至CPU，数据加载至内存。指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存和IO。</p>\\n</li>\\n<li>\\n<p>当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。</p>\\n</li>\\n<li>\\n<p>进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）。</p>\\n</li>\\n<li>\\n<p><strong>操作系统会以进程为单位，分配系统资源（CPU时间片、内存等资源），进程是资源分配的最小单位。</strong></p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
